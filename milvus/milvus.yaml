apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: milvus-standalone
  namespace: default
  labels:
    app: milvus-standalone
spec:
  serviceName: milvus-standalone
  replicas: 1
  selector:
    matchLabels:
      app: milvus-standalone
  template:
    metadata:
      labels:
        app: milvus-standalone
    spec:
#      nodeSelector: # 要求部署到某台节点上
#        kubernetes.io/hostname: 10.0.0.1
      containers:
        - name: etcd
          image: quay.io/coreos/etcd:v3.5.0
          command: [ "etcd","--data-dir=/etcd" ]
          env:
            - name: ETCDCTL_API
              value: "3"
            - name: ETCD_LISTEN_CLIENT_URLS
              value: "http://0.0.0.0:2379"
            - name: ETCD_ADVERTISE_CLIENT_URLS
              value: "http://0.0.0.0:2379"
            - name: ETCD_AUTO_COMPACTION_MODE
              value: "revision"
            - name: ETCD_AUTO_COMPACTION_RETENTION
              value: "1000"
            - name: ETCD_QUOTA_BACKEND_BYTES
              value: "4294967296"
            - name: ETCD_SNAPSHOT_COUNT
              value: "50000"
          ports:
            - containerPort: 2379
              protocol: TCP
              name: tcp01
            - containerPort: 2380
              protocol: TCP
              name: tcp02
          volumeMounts:
            - name: etcd-data
              mountPath: /etcd
        - name: minio
          image: minio/minio
          command: [ "minio","server","/minio_data","--console-address",":9000","--address",":9001" ]
          env:
            - name: MINIO_ACCESS_KEY
              value: "minioadmin"
            - name: MINIO_SECRET_KEY
              value: "minioadmin"
            - name: MINIO_ROOT_USER
              value: "minioadmin"
            - name: MINIO_ROOT_PASSWORD
              value: "minioadmin"
          volumeMounts:
            - name: minio-data
              mountPath: /minio_data
          ports:
            - containerPort: 9000
              protocol: TCP
              name: tcp01
        - name: milvus
          image: milvus:v2.1.4
          lifecycle:
            postStart:
              exec:
                command: [ "sh","-c","sleep 20" ]
          command: [ "milvus", "run", "standalone" ]
          env:
            - name: ETCD_ENDPOINTS
              value: "0.0.0.0:2379"
            - name: MINIO_ADDRESS
              value: "0.0.0.0:9001"
          ports:
            - containerPort: 19530
              protocol: TCP
              name: tcp01
            - containerPort: 9091
              protocol: TCP
              name: tcp02
          volumeMounts:
            - name: milvus-data
              mountPath: /var/lib/milvus
      imagePullSecrets:
        - name: default-secret
  volumeClaimTemplates:
    - metadata:
        name: etcd-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: csi-disk
    - metadata:
        name: milvus-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: csi-disk
    - metadata:
        name: minio-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: csi-disk

---
apiVersion: v1
kind: Service       # 对象类型为Service
metadata:
  name: milvus-standalone
  namespace: default
spec:
  ports:
    - name: minio
      protocol: TCP
      targetPort: 9000
      port: 9000
    - name: milvus-1
      protocol: TCP
      targetPort: 9091
      port: 9091
    - name: milvus-2
      protocol: TCP
      targetPort: 19530
      port: 19530
  selector:
    app: milvus-standalone
#  type: NodePort
  sessionAffinity: None
  externalTrafficPolicy: Cluster